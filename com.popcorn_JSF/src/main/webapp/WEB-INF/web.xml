<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>
 
    <context-param>
        <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
        <param-value>server</param-value>
    </context-param>
    <context-param>
        <param-name>javax.faces.DEFAULT_SUFFIX</param-name>
        <param-value>.xhtml</param-value>
    </context-param>
    <context-param>
        <param-name>primefaces.skin</param-name>
        <param-value>none</param-value>
    </context-param>
	<!-- GAE Bug 1506 JSP 2.1 API but 2.0 Implementation -->
    <context-param>
        <param-name>com.sun.faces.expressionFactory</param-name>
        <param-value>com.sun.el.ExpressionFactoryImpl</param-value>
    </context-param>
    <context-param>
        <description>
      Set this flag to true if you want the JavaServer Faces
      Reference Implementation to validate the XML in your
      faces-config.xml resources against the DTD. Default
      value is false.
        </description>
        <param-name>com.sun.faces.validateXml</param-name>
        <param-value>true</param-value>
    </context-param>
	<!--
		***** Accommodate Single-Threaded Requirement of Google AppEngine
	-->
    <context-param>
        <description>
      When enabled, the runtime initialization and default ResourceHandler
      implementation will use threads to perform their functions. Set this 
      value to false if threads aren't desired (as in the case of running 
      within the Google Application Engine).

      Note that when this option is disabled, the ResourceHandler will not 
      pick up new versions of resources when ProjectStage is development.
        </description>
        <param-name>com.sun.faces.enableThreading</param-name>
        <param-value>false</param-value>
    </context-param>

    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/log4j.properties</param-value>
    </context-param>
    
    <context-param>
	<param-name>primefaces.THEME</param-name>
	<param-value>home</param-value>
    </context-param>


    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

<!--
   
   


        
    </listener>
-->
	<!--	<listener>-->
	<!--
		<listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class>
	-->
	<!--	</listener>-->

	<!--	<filter>-->
	<!--		<filter-name>CharacterEncodingFilter</filter-name>-->
	<!--		<filter-class>-->
	<!--			org.springframework.web.filter.CharacterEncodingFilter-->
	<!--		</filter-class>-->
	<!--		<init-param>-->
	<!--			<param-name>encoding</param-name>-->
	<!--			<param-value>UTF-8</param-value>-->
	<!--		</init-param>-->
	<!--	</filter>-->
	<!--	<filter-mapping>-->
	<!--		<filter-name>CharacterEncodingFilter</filter-name>-->
	<!--		<url-pattern>/*</url-pattern>-->
	<!--	</filter-mapping>-->


	<!--	<filter>-->
	<!--		<filter-name>springSecurityFilterChain</filter-name>-->
	<!--		<filter-class>-->
	<!--			org.springframework.web.filter.DelegatingFilterProxy-->
	<!--		</filter-class>-->
	<!--	</filter>-->
	<!--	<filter-mapping>-->
	<!--		<filter-name>springSecurityFilterChain</filter-name>-->
	<!--		<url-pattern>/*</url-pattern>-->
	<!--	</filter-mapping>-->

    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.faces</url-pattern>
    </servlet-mapping>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

  

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml
                    /WEB-INF/applicationContext-security.xml</param-value>
    </context-param>


    <servlet>
        <servlet-name>sprinMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:sprinMVCContext.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>sprinMVC</servlet-name>
        <url-pattern>/spring/*</url-pattern>
    </servlet-mapping>


<!--
		Serves static resource content from .jar files such as
		spring-faces.jar
	-->
        
    <servlet>
        <servlet-name>Resources Servlet</servlet-name>
        <servlet-class>
			org.springframework.js.resource.ResourceServlet
        </servlet-class>
        <load-on-startup>0</load-on-startup>
    </servlet>

	<!--
		Map all /resources requests to the Resource Servlet for handling
	-->
    <servlet-mapping>
        <servlet-name>Resources Servlet</servlet-name>
        <url-pattern>/resources/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>_ah_sessioncleanup</servlet-name>
        <servlet-class>com.google.apphosting.utils.servlet.SessionCleanupServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>_ah_sessioncleanup</servlet-name>
        <url-pattern>/_ah/sessioncleanup</url-pattern>
    </servlet-mapping>


    <security-constraint>
        <web-resource-collection>

            <url-pattern>/_ah/sessioncleanup</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>admin</role-name>
        </auth-constraint>
    </security-constraint>

    <!--Spring security-->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <listener>
        <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
    </listener>

    <!-- Fin Spring security-->
  
</web-app>

